<?xml version="1.0" encoding="utf-8"?>
<manifest package="com.synacor.cloudidkeycloaklogin"
    xmlns:android="http://schemas.android.com/apk/res/android">

	<uses-permission android:name="android.permission.INTERNET" />

	<!--
	TODO: Document the purpose of this:
	-->
	<queries>
		<intent>
			<action android:name="android.intent.action.VIEW" />
			<category android:name="android.intent.category.BROWSABLE" />
			<data android:scheme="https" />
		</intent>
		<intent>
			<action android:name="android.intent.action.VIEW" />
			<category android:name="android.intent.category.APP_BROWSER" />
			<data android:scheme="https" />
		</intent>
	</queries>


	<application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.CloudIdKeycloakLogin">

		<activity
            android:name=".LoginActivity"
            android:label="@string/app_name"
            android:theme="@style/Theme.CloudIdKeycloakLogin.NoActionBar">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>


		<activity
			android:name=".TokenActivity"
			android:label="@string/app_name"
			android:theme="@style/Theme.CloudIdKeycloakLogin.NoActionBar">
		</activity>

		<!--
		TODO: Document the purpose of this:
		-->
		<!--
        This activity declaration is merged with the version from the library manifest.
        It demonstrates how an https redirect can be captured, in addition to or instead of
        a custom scheme.
        Generally, this should be done in conjunction with an app link declaration for Android M
        and above, for additional security and an improved user experience. See:
        https://developer.android.com/training/app-links/index.html
        The declaration from the library can be completely replaced by adding
        tools:node="replace"
        To the list of attributes on the activity element.
        -->
		<activity android:name="net.openid.appauth.RedirectUriReceiverActivity">
			<intent-filter>
				<action android:name="android.intent.action.VIEW"/>
				<category android:name="android.intent.category.DEFAULT"/>
				<category android:name="android.intent.category.BROWSABLE"/>
				<data android:scheme="https"
					android:host="appauth.demo-app.io"
					android:path="/oauth2redirect"/>
			</intent-filter>
		</activity>

    </application>
</manifest>
